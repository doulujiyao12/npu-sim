配置说明文档
==============

本配置文件用于定义硬件加速器或处理器核心的架构参数。以下是对各字段的详细说明。

顶层参数
--------

- **x** (整数)
  
  表示 2D Mesh 阵列在 X 维度上的数量，例如 x = 8, 表示 8 * 8 的阵列。

- **comm_acc** (整数)
  
  表示一个时钟周期可以发送多少个通信数据包。例如 comm_acc = 256, 表示一次时钟周期可以发送 256 个通信数据包。

核心配置（cores）
-----------------

按照id区间配置多个处理核，每个核包含执行单元、特殊功能单元和本地 SRAM。如果配置了id = 0, 9, 15。则表示id = 0 - 8 的
的处理核按照 id = 0 的配置。id = 9 - 14 的处理核按照 id = 9 的配置。id = 15 以后的处理核 id = 15 的配置。

核心 0（id: 0）
^^^^^^^^^^^^^^^

- **id** (整数)
  
  核心的唯一标识符。此处为 0。

- **exu_x** (整数)
  
  脉动阵列（Execution Unit）在 X 方向的数量的维度。

- **exu_y** (整数)
  
  脉动阵列（Execution Unit）在 Y 方向的数量的维度。

- **sfu_x** (整数)
  
  特殊功能单元（Special Function Unit, SFU）规模数量，通常用于浮点运算、超越函数（如 sin、log）等高性能计算任务。

- **sram_bitwidth** (整数)
  
  本地 SRAM 的位宽（bit width）。值为 64，表示每次可读写 64 位（8 字节）数据。

示例配置摘要
--------------

- 系统横向规模：8
- 通信加速器容量：256
- 核心数量：1（ID 为 0）
  - 执行单元阵列：64 × 64
  - 特殊功能单元规模：2048
  - 本地 SRAM 位宽：64 位

  
配置示例（JSON 格式）
----------------------

以下是一个与上述说明对应的完整 JSON 配置示例：
> **注意**：具体单位和语义可能依赖于目标硬件架构，请结合硬件设计文档理解上述参数的实际含义。

.. code-block:: json

    {
        "x": 8,
        "comm_acc": 256,
        "cores": [
            {
                "id": 0,
                "exu_x": 64,
                "exu_y": 64,
                "sfu_x": 2048,
                "sram_bitwidth": 64
            }
        ]
    }